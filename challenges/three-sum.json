{
  "name": "three-sum",
  "id": 2,
  "difficulty": "medium",
  "description": "Given a list of integers and a target value, return the indices of the first trio of numbers that add up to the target. Search the array from left to right and always choose the earliest valid combination (i < j < k). Return the indices as a list of three integers or None (or the equivalent indicator in your language) if no such trio exists.",
  "function_name": "three_sum",
  "type": "function",
  "inputs": ["arr","target"],
  "tests": [
    {
      "input": [[1, 4, 2, 10, -3], 15],
      "expected_output": [0, 1, 3]
    },
    {
      "input": [[2, 7, 11, 15, -5], 13],
      "expected_output": [1, 2, 4]
    },
    {
      "input": [[3, 2, 4, 1], 8],
      "expected_output": [0, 2, 3]
    },
    {
      "input": [[1, 2, 3, 4, 5, 6], 12],
      "expected_output": [0, 4, 5],
      "hidden": true
    },
    {
      "input": [[-1, 0, 1, 2, -1, -4], 0],
      "expected_output": [0, 1, 2],
      "hidden": true
    },
    {
      "input": [[10, 20, 30, 40, 50], 100],
      "expected_output": [0, 3, 4]
    },
    {
      "input": [[1, 1, 1, 2, 3], 5],
      "expected_output": [0, 1, 4]
    },
    {
      "input": [[0, 1, 2, -3, 3], 0],
      "expected_output": [0, 3, 4]
    },
    {
      "input": [[-5, 0, 5, -2, 2], 0],
      "expected_output": [0, 1, 2],
      "hidden": true
    },
    {
      "input": [[1, 2, 3], 20],
      "expected_output": null,
      "hidden": true
    }
  ]
}